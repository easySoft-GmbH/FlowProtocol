@page
@model InstructionModel
@{
    ViewData["Title"] = "Anleitung";
}
<h1>Anleitung</h1>
<p><i>FlowProtocol</i> ist eine Anwendung, mit der man Check-,
bzw. Prüflisten zu ausgewählten Themengebieten anhand einfacher Kontrollfragen
erstellen kann. Mithilfe der Kontrollfragen wird dabei festgestellt, welche
Aspekte relevant sind und welche nicht und welche Prüfpunkte dementsprechend am
Ende in die Liste aufgenommen werden. Das Ziel dieser Vorgehensweise ist die
Sicherstellung von Qualität durch die Bereitstellung möglichst effizienter
Prüflisten, die so gut wie möglich auf die tatsächlich relevanten Punkte
beschränkt bleiben.</p>

<h5>Anwendergruppen</h5>
<p>Diese Vorgehensweise ist vielseitig einsetzbar und daher
auch für verschiedene Anwendergruppen innerhalb einer Einrichtung verwendbar.
Im Umfeld der Softwareentwicklung könnte dies zum Beispiel die Anwendergruppen
„Entwicklung“, „Product Owner“ und „UX und Design“ sein. Entsprechend ist es
sinnvoll, zunächst die verschiedenen Anwendergruppen auf unterster Ebene in der
Konfiguration von <i>FlowProtocol</i> abzubilden. Dies geht ganz einfach
dadurch, dass man im Basisverzeichnis für die Vorlagen (siehe appsettings.json, hier: @Model.TemplatePath)
Unterverzeichnisse für jede Anwendergruppe mit einer sprechenden Benennung anlegt.
Die jeweilige Anwendergruppe kann dann unter dem Menü »Anwendergruppen«
aufgerufen werden.</p>

<h5>Vorlagen</h5>
<p>Die Vorlagen sind die Kernelemente von <i>FlowProtocol</i>.
Sie beinhalten die Fragen samt Antwortmöglichkeiten und die davon abhängigen
Prüfpunkte. Jede Vorlage sollte sich auf ein spezielles Thema oder eine
bestimmte Art von Aufgabenstellung beziehen, um möglichst direkt mit möglichst
spezifischen Fragen starten zu können. Ein solches dem Gebiet kann zum Beispiel
eine bestimmte Art von Entwicklung sein, die nach einem vorgegebenen Muster
abläuft und darin überschaubare Varianten aufweisen kann. Diese lassen sich
dann mithilfe von passenden Fragen eingrenzen. In gleicher Weise kann man auch
fachliche Themen in Form einer Vorlage bereitstellen, indem man versucht, die
komplette fachliche Spezifikation zu erfassen, und deren potentielle
Beeinflussung durch eine Maßnahme durch geeignete Fragen festzustellen.
Vorlagen können wiederum in Vorlagengruppen gruppiert werden, etwa wie in den
gerade genannten Beispielen in „Musterentwicklungen“ und „Fachliche Themen“,
eventuell zusätzlich unterteilt durch Produkt-, und Komponentennamen. Die
Unterteilung erfolgt in gleicher Weise wie bei den Anwendergruppen durch
entsprechend benannte Unterverzeichnisse unterhalb der
Anwendergruppen-Verzeichnisse. Eine mehrstufige Hierarchie ist möglich, wird
jedoch in der Darstellung ignoriert.</p>

<h5>Aufbau einer Vorlage</h5>
<p>Vorlagen sind einfache Textdateien mit der Dateiendung
„*.qfp“ (Quick Flow Protocol). Die Syntax besteht aus ganz wenigen
Steuerzeichen und wurde speziell darauf ausgelegt, dass Vorlagen sehr einfach mit einem beliebigen Editor
erstellt und bearbeitet werden können. Der Inhalt einer Vorlage besteht im
Wesentlichen aus den Komponenten Kommentar (//), Frage (?), Antwort (#), Prüfpunkt (&gt;&gt;) und Einbindungen (++), 
die in beliebiger Tiefe verschachtelt werden können. 
Fragen und Antworten haben jeweils eine möglichst kurze Kennung,
mit denen der Verlauf der Durchführung als URL-Parameter abgebildet wird.
Zeilenumbrüche und Einrückungen sind essenziell zur Abbildung der Struktur,
wobei die Anzahl der Zeichen relevant ist. Das nachfolgende Beispiel zeigt, wie
die Syntax aufgebaut ist:</p>
<div style="text-indent:2px;"><code>// Diese Vorlage umfasst Prüffragen für die Erstellung von Listenbereichen.</code></div>
<div style="text-indent:2px;"><code>?F1: Welche Art von Liste wurde erstellt?</code></div>
<div style="text-indent:22px;"><code>#E: Editierbare Liste</code></div>
<div style="text-indent:42px;"><code>>> Elemente in der Liste können bearbeitet werden.</code></div>
<div style="text-indent:42px;"><code>?E1: Können im Umfeld der Liste neue Elemente erstellt werden?</code></div>
<div style="text-indent:62px;"><code>#J: Ja</code></div>
<div style="text-indent:82px;"><code>>> Neu erstellte Elemente werden direkt in der Liste angezeigt.</code></div>
<div style="text-indent:82px;"><code>++ListeErstellung: $Bereich=Test; $Postfix=1</code></div>
<div style="text-indent:62px;"><code>#N: Nein</code></div>
<div style="text-indent:22px;"><code>#A: Auswahlliste</code></div>
<div style="text-indent:42px;"><code>>> Elemente in der Liste können nicht bearbeitet werden.</code></div>
<div style="text-indent:42px;"><code>>> Die Auswahl einzelner Elemente ist möglich und wird korrekt verarbeitet.</code></div>
<br>
<h5>Einbindungen</h5>
<p>Manche Abschnitte aus Vorlagen sind eventuell so allgemein, dass man sie in gleichger Form in mehreren Vorlagen verwenden möchte.
In diesem Fall kann man diese Abschnitte als Funktionsdatei mit der Dateiendung „*.qff“ (Quick Flow Protocol) in eine eigene Datei auslagern
und über eine Einbindung (<code>++Dateiname</code>) an einer bestimmten Stelle in einer Vorlage aufrufen. 
Die Datei muss dabei im gleichen Verzeichnis liegen.
Bei einem solchen Aufruf lassen sich auch Variablen mit Werte belegen, z.B. <code>$Bereich=Test; $Postfix=1</code>, so dass
beim Einlsen der Datei Ersetzungen möglich sind, z.B.<br>
<div style="text-indent:2px;"><code>?T$Postfix: Besitzt der Bereich $Bereich einen Berichtskontext?</code></div><br>
zu<br>
<div style="text-indent:2px;"><code>?T1: Besitzt der Bereich Test einen Berichtskontext?</code></div><br>
wodurch auch mehfache Aufrufe innerhalb derselben Vorlage möglich sind.</p>